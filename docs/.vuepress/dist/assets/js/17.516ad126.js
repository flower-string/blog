(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{301:function(r,e,t){"use strict";t.r(e);var a=t(14),o=Object(a.a)({},(function(){var r=this,e=r._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[e("h2",{attrs:{id:"高层定义"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#高层定义"}},[r._v("#")]),r._v(" "),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/First_steps/What_is_JavaScript#%E9%AB%98%E5%B1%82%E5%AE%9A%E4%B9%89",target:"_blank",rel:"noopener noreferrer"}},[r._v("高层定义"),e("OutboundLink")],1)]),r._v(" "),e("p",[r._v("JavaScript 是一种脚本编程语言，它可以在网页上实现复杂的功能，网页展现给你的不再是简单的静态信息，而是实时的内容更新——交互式的地图、2D/3D 动画、滚动播放的视频等等——JavaScript 就在其中。它是标准 Web 技术蛋糕的第三层，其中 "),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Learn/HTML",target:"_blank",rel:"noopener noreferrer"}},[r._v("HTML"),e("OutboundLink")],1),r._v(" 和 "),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Learn/CSS",target:"_blank",rel:"noopener noreferrer"}},[r._v("CSS"),e("OutboundLink")],1),r._v(" 我们已经在学习区的其他部分进行了详细的讲解。")]),r._v(" "),e("p",[e("img",{attrs:{src:"E:%5CWeb%E5%89%8D%E7%AB%AF%5CProject%5Cblog%5Csource%5Cmedias%5Ccake.png",alt:"标准 web 技术的三层——HTML、CSS 和 JavaScript"}})]),r._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Glossary/HTML",target:"_blank",rel:"noopener noreferrer"}},[r._v("HTML"),e("OutboundLink")],1),r._v(" 是一种标记语言，用来结构化我们的网页内容并赋予内容含义，例如定义段落、标题和数据表，或在页面中嵌入图片和视频。")]),r._v(" "),e("li",[e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Glossary/CSS",target:"_blank",rel:"noopener noreferrer"}},[r._v("CSS"),e("OutboundLink")],1),r._v(" 是一种样式规则语言，可将样式应用于 HTML 内容，例如设置背景颜色和字体，在多个列中布局内容。")]),r._v(" "),e("li",[e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Glossary/JavaScript",target:"_blank",rel:"noopener noreferrer"}},[r._v("JavaScript"),e("OutboundLink")],1),r._v(" 是一种脚本语言，可以用来创建动态更新的内容，控制多媒体，制作图像动画，还有很多。（好吧，虽然它不是万能的，但可以通过简短的代码来实现神奇的功能。）")])]),r._v(" "),e("p",[r._v("这三层依次建立，秩序井然。以简单文本标签作为示例。首先用 HTML 将文本标记起来，从而赋予它结构和目的：")]),r._v(" "),e("p",[r._v("HTMLPlayCopy to Clipboard")]),r._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[r._v("<p>Player 1: Chris</p>\n")])])]),e("p",[e("img",{attrs:{src:"E:%5CWeb%E5%89%8D%E7%AB%AF%5CProject%5Cblog%5Csource%5Cmedias%5Cjust-html.png",alt:"作为纯文本段落出现的“Player 1: Chris”"}})]),r._v(" "),e("p",[r._v("然后我们可以为它加一点 CSS 让它更好看：")]),r._v(" "),e("p",[r._v("CSSPlayCopy to Clipboard")]),r._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[r._v('p {\n  font-family: "helvetica neue", helvetica, sans-serif;\n  letter-spacing: 1px;\n  text-transform: uppercase;\n  text-align: center;\n  border: 2px solid rgb(0 0 200 / 0.6);\n  background: rgb(0 0 200 / 0.6);\n  color: rgb(255 255 255 / 1);\n  box-shadow: 1px 1px 2px rgb(0 0 200 / 0.4);\n  border-radius: 10px;\n  padding: 3px 10px;\n  display: inline-block;\n  cursor: pointer;\n}\n')])])]),e("p",[e("img",{attrs:{src:"E:%5CWeb%E5%89%8D%E7%AB%AF%5CProject%5Cblog%5Csource%5Cmedias%5Chtml-and-css.png",alt:"已添加样式的“Player 1: Chris”段落"}})]),r._v(" "),e("p",[r._v("最后，我们可以再加上一些 JavaScript 来实现动态行为：")]),r._v(" "),e("p",[r._v("JSPlayCopy to Clipboard")]),r._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[r._v('const para = document.querySelector("p");\n\npara.addEventListener("click", updateName);\n\nfunction updateName() {\n  const name = prompt("Enter a new name");\n  para.textContent = `Player 1: ${name}`;\n}\n')])])]),e("p",[r._v("Play")]),r._v(" "),e("iframe",{staticClass:"sample-code-frame",staticStyle:{"box-sizing":"content-box","border-top":"none","border-right-color":"","border-right-style":"","border-right-width":"","border-bottom-color":"","border-bottom-style":"","border-bottom-width":"","border-left-color":"","border-left-style":"","border-left-width":"","border-image-source":"","border-image-slice":"","border-image-width":"","border-image-outset":"","border-image-repeat":"","max-width":"100%",width:"calc((100% - 2rem) - 2px)",background:"rgb(255, 255, 255)","border-top-left-radius":"0px","border-top-right-radius":"0px","border-bottom-right-radius":"","border-bottom-left-radius":"",padding:"1rem","margin-top":"0px"},attrs:{title:"高层定义 sample",id:"frame_高层定义",width:"100%",height:"80",src:"https://live.mdnplay.dev/zh-CN/docs/Learn/JavaScript/First_steps/What_is_JavaScript/runner.html?id=%E9%AB%98%E5%B1%82%E5%AE%9A%E4%B9%89",loading:"lazy"}}),r._v(" "),e("p",[r._v("尝试点击最后一个版本的文本标签，观察会发生什么（也可在 GitHub 上查看这个演示的"),e("a",{attrs:{href:"https://github.com/mdn/learning-area/blob/main/javascript/introduction-to-js-1/what-is-js/javascript-label.html",target:"_blank",rel:"noopener noreferrer"}},[r._v("源代码"),e("OutboundLink")],1),r._v("或"),e("a",{attrs:{href:"https://mdn.github.io/learning-area/javascript/introduction-to-js-1/what-is-js/javascript-label.html",target:"_blank",rel:"noopener noreferrer"}},[r._v("在线运行它"),e("OutboundLink")],1),r._v("）！")]),r._v(" "),e("p",[r._v("JavaScript 能做的远不止这些。让我们来仔细探索。")]),r._v(" "),e("h2",{attrs:{id:"它到底可以做什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#它到底可以做什么"}},[r._v("#")]),r._v(" "),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/First_steps/What_is_JavaScript#%E5%AE%83%E5%88%B0%E5%BA%95%E5%8F%AF%E4%BB%A5%E5%81%9A%E4%BB%80%E4%B9%88%EF%BC%9F",target:"_blank",rel:"noopener noreferrer"}},[r._v("它到底可以做什么？"),e("OutboundLink")],1)]),r._v(" "),e("p",[r._v("客户端 JavaScript 语言的核心包含一些普遍的编程特性，以让你可以做到如下的事情：")]),r._v(" "),e("ul",[e("li",[r._v("在变量中储存有用的值。比如上文的示例中，我们请求客户输入一个新名字，然后将其储存到 "),e("code",[r._v("name")]),r._v(" 变量中。")]),r._v(" "),e("li",[r._v("操作一段文本（在编程中称为“字符串”（string））。上文的示例中，我们取字符串“玩家 1：”，然后把它和 "),e("code",[r._v("name")]),r._v(" 变量拼接起来，创造出完整的文本标签，比如“玩家 1：小明”。")]),r._v(" "),e("li",[r._v("运行代码以响应网页中发生的特定事件。上文的示例中，我们用一个 "),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Element/click_event",target:"_blank",rel:"noopener noreferrer"}},[e("code",[r._v("click")]),e("OutboundLink")],1),r._v(" 事件来检测按钮什么时候被点击，然后运行代码更新文本标签。")]),r._v(" "),e("li",[r._v("以及更多！")])]),r._v(" "),e("p",[r._v("JavaScript 语言核心之上所构建的功能更令人兴奋。"),e("strong",[r._v("应用程序接口")]),r._v("（"),e("strong",[r._v("Application Programming Interface，API")]),r._v("）将为你的代码提供额外的超能力。")]),r._v(" "),e("p",[r._v("API 是已经建立好的一套代码组件，可以让开发者实现原本很难甚至无法实现的程序。就像现成的家具套件之于家居建设，用一些已经切好的木板组装一个书柜，显然比自己设计，寻找合适的木材，裁切至合适的尺寸和形状，找到正确尺寸的螺钉，"),e("em",[r._v("然后")]),r._v("再组装成书柜要简单得多。")]),r._v(" "),e("p",[r._v("API 通常分为两类。")]),r._v(" "),e("p",[e("img",{attrs:{src:"E:%5CWeb%E5%89%8D%E7%AB%AF%5CProject%5Cblog%5Csource%5Cmedias%5Cbrowser.png",alt:"API 的两种分类：第三方 API 显示于浏览器同侧，浏览器 API 在浏览器内部"}})]),r._v(" "),e("p",[e("strong",[r._v("浏览器 API")]),r._v(" 内建于 web 浏览器中，它们可以将数据从周边计算机环境中筛选出来，还可以做实用的复杂工作。例如：")]),r._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Document_Object_Model",target:"_blank",rel:"noopener noreferrer"}},[r._v("文档对象模型 API"),e("OutboundLink")],1),r._v(" 能通过创建、移除和修改 HTML，为页面动态应用新样式等手段来操作 HTML 和 CSS。比如当某个页面出现了一个弹窗，或者显示了一些新内容（像上文小演示中看到那样），这就是 DOM 在运行。")]),r._v(" "),e("li",[e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Geolocation",target:"_blank",rel:"noopener noreferrer"}},[r._v("地理位置 API"),e("OutboundLink")],1),r._v(" 获取地理信息。这就是为什么"),e("a",{attrs:{href:"https://www.google.com/maps",target:"_blank",rel:"noopener noreferrer"}},[r._v("谷歌地图"),e("OutboundLink")],1),r._v("可以找到你的位置，而且标示在地图上。")]),r._v(" "),e("li",[e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Canvas_API",target:"_blank",rel:"noopener noreferrer"}},[r._v("画布（Canvas）"),e("OutboundLink")],1),r._v(" 和 "),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/WebGL_API",target:"_blank",rel:"noopener noreferrer"}},[r._v("WebGL"),e("OutboundLink")],1),r._v(" API 可以创建生动的 2D 和 3D 图像。人们正运用这些 web 技术制作令人惊叹的作品。参见 "),e("a",{attrs:{href:"https://experiments.withgoogle.com/collection/chrome",target:"_blank",rel:"noopener noreferrer"}},[r._v("Chrome Experiments"),e("OutboundLink")],1),r._v(" 以及 "),e("a",{attrs:{href:"https://webglsamples.org/",target:"_blank",rel:"noopener noreferrer"}},[r._v("webglsamples"),e("OutboundLink")],1),r._v("。")]),r._v(" "),e("li",[r._v("诸如 "),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/HTMLMediaElement",target:"_blank",rel:"noopener noreferrer"}},[e("code",[r._v("HTMLMediaElement")]),e("OutboundLink")],1),r._v(" 和 "),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/WebRTC_API",target:"_blank",rel:"noopener noreferrer"}},[r._v("WebRTC"),e("OutboundLink")],1),r._v(" 等"),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/Guide/Audio_and_video_delivery",target:"_blank",rel:"noopener noreferrer"}},[r._v("影音类 API"),e("OutboundLink")],1),r._v(" 让你可以利用多媒体做一些非常有趣的事，比如在网页中直接播放音乐和影片，或用自己的网络摄像头获取录像，然后在其他人的电脑上展示（试用简易版"),e("a",{attrs:{href:"http://chrisdavidmills.github.io/snapshot/",target:"_blank",rel:"noopener noreferrer"}},[r._v("截图演示"),e("OutboundLink")],1),r._v("以理解这个概念）。")])]),r._v(" "),e("p",[e("strong",[r._v("备注：")]),r._v(" 上述很多演示都不能在旧浏览器中运行。推荐你在测试代码时使用诸如 Firefox、Chrome、Edge 或者 Opera 等现代浏览器。当代码即将交付生产环境时（也就是真实的客户即将使用真实的代码时），你还需要深入考虑"),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Learn/Tools_and_testing/Cross_browser_testing",target:"_blank",rel:"noopener noreferrer"}},[r._v("跨平台测试"),e("OutboundLink")],1),r._v("。")]),r._v(" "),e("p",[e("strong",[r._v("第三方 API")]),r._v(" 并没有默认嵌入浏览器中，一般要从网上取得它们的代码和信息。比如：")]),r._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://developer.twitter.com/en/docs",target:"_blank",rel:"noopener noreferrer"}},[r._v("Twitter API"),e("OutboundLink")],1),r._v("、"),e("a",{attrs:{href:"https://open.weibo.com/",target:"_blank",rel:"noopener noreferrer"}},[r._v("新浪微博 API"),e("OutboundLink")],1),r._v(" 可以在网站上展示最新推文之类。")]),r._v(" "),e("li",[e("a",{attrs:{href:"https://developers.google.com/maps/",target:"_blank",rel:"noopener noreferrer"}},[r._v("谷歌地图 API"),e("OutboundLink")],1),r._v("、"),e("a",{attrs:{href:"https://wiki.openstreetmap.org/wiki/API",target:"_blank",rel:"noopener noreferrer"}},[r._v("OpenStreetMap API"),e("OutboundLink")],1),r._v("、"),e("a",{attrs:{href:"https://lbs.amap.com/",target:"_blank",rel:"noopener noreferrer"}},[r._v("高德地图 API"),e("OutboundLink")],1),r._v(" 可以在网站嵌入定制的地图等等。")])]),r._v(" "),e("p",[e("strong",[r._v("备注：")]),r._v(" 这些 API 为进阶内容，本模块中不会涉及，更多信息请参考："),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/Client-side_web_APIs",target:"_blank",rel:"noopener noreferrer"}},[r._v("客户端 web API 模块"),e("OutboundLink")],1),r._v("。")]),r._v(" "),e("p",[r._v("先稳住！你看到的只是冰山一角。你不可能仅靠学一天 JavaScript 就能构建下一个 Facebook、谷歌地图、或 Instagram——还有很多基础需要了解，这也是为什么你会在这里，让我们继续吧！")]),r._v(" "),e("h2",{attrs:{id:"javascript-在页面上做了什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#javascript-在页面上做了什么"}},[r._v("#")]),r._v(" "),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/First_steps/What_is_JavaScript#javascript_%E5%9C%A8%E9%A1%B5%E9%9D%A2%E4%B8%8A%E5%81%9A%E4%BA%86%E4%BB%80%E4%B9%88%EF%BC%9F",target:"_blank",rel:"noopener noreferrer"}},[r._v("JavaScript 在页面上做了什么？"),e("OutboundLink")],1)]),r._v(" "),e("p",[r._v("现在我们实实在在的学习一些代码，与此同时，探索 JavaScript 运行时背后发生的事情。")]),r._v(" "),e("p",[r._v("让我们简单回顾一下，浏览器在读取一个网页时都发生什么（"),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Learn/CSS/First_steps/How_CSS_works#css_%E7%A9%B6%E7%AB%9F%E6%98%AF%E6%80%8E%E4%B9%88%E5%B7%A5%E4%BD%9C%E7%9A%84%EF%BC%9F",target:"_blank",rel:"noopener noreferrer"}},[r._v("CSS 如何工作"),e("OutboundLink")],1),r._v("一文中首次谈及）。浏览器在读取一个网页时，代码（HTML、CSS 和 JavaScript）将在一个运行环境（浏览器标签页）中得到执行。就像一间工厂，将原材料（代码）加工为一件产品（网页）。")]),r._v(" "),e("p",[e("img",{attrs:{src:"E:%5CWeb%E5%89%8D%E7%AB%AF%5CProject%5Cblog%5Csource%5Cmedias%5Cexecution.png",alt:"当页面加载时，HTML、CSS 和 JavaScript 代码共同创建浏览器标签页中的内容"}})]),r._v(" "),e("p",[r._v("JavaScript 的一个非常常见的用途是通过文档对象模型 API（如上所述）动态修改 HTML 和 CSS，以更新用户界面。请注意，网页文档中的代码通常按照其在页面上出现的顺序加载和执行。如果 JavaScript 先于要修改的 HTML 和 CSS 加载和运行，则可能发生错误。你将在本文后面的"),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/First_steps/What_is_JavaScript#%E8%84%9A%E6%9C%AC%E5%8A%A0%E8%BD%BD%E7%AD%96%E7%95%A5",target:"_blank",rel:"noopener noreferrer"}},[r._v("脚本加载策略"),e("OutboundLink")],1),r._v("部分了解到解决这个问题的方法。")]),r._v(" "),e("h3",{attrs:{id:"浏览器安全"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#浏览器安全"}},[r._v("#")]),r._v(" "),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/First_steps/What_is_JavaScript#%E6%B5%8F%E8%A7%88%E5%99%A8%E5%AE%89%E5%85%A8",target:"_blank",rel:"noopener noreferrer"}},[r._v("浏览器安全"),e("OutboundLink")],1)]),r._v(" "),e("p",[r._v("每个浏览器标签页就是其自身用来运行代码的独立容器（这些容器用专业术语称为“运行环境”）。大多数情况下，每个标签页中的代码完全独立运行，而且一个标签页中的代码不能直接影响另一个标签页（或者另一个网站）中的代码。这是一个好的安全措施，如果不这样，黑客就可以从其他网站盗取信息，或做一些其他坏事。")]),r._v(" "),e("p",[e("strong",[r._v("备注：")]),r._v(" 以安全的方式在不同网站或标签页中传送代码和数据的方法是存在的，但它们属于进阶技术，本课程不会涉及。")]),r._v(" "),e("h3",{attrs:{id:"javascript-运行次序"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#javascript-运行次序"}},[r._v("#")]),r._v(" "),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/First_steps/What_is_JavaScript#javascript_%E8%BF%90%E8%A1%8C%E6%AC%A1%E5%BA%8F",target:"_blank",rel:"noopener noreferrer"}},[r._v("JavaScript 运行次序"),e("OutboundLink")],1)]),r._v(" "),e("p",[r._v("当浏览器执行到一段 JavaScript 代码时，通常会按从上往下的顺序执行这段代码。这意味着你需要注意代码书写的顺序。比如，我们回到第一个例子中的 JavaScript 代码：")]),r._v(" "),e("p",[r._v("JSCopy to Clipboard")]),r._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[r._v("const para = document.querySelector('p');\n\npara.addEventListener('click', updateName);\n\nfunction updateName() {\n  const name = prompt(\"输入一个新的名字：\");\n  para.textContent = `玩家 1：${name}`;\n}\n")])])]),e("p",[r._v("这里我们选定一个文本段落（第 1 行)，然后给它附上一个事件监听器（第 3 行），使得在它被点击时，"),e("code",[r._v("updateName()")]),r._v(" 代码块（5 – 8 行）便会运行。"),e("code",[r._v("updateName()")]),r._v(" 代码块（这类可以重复使用的代码块称为“函数”）向用户请求一个新名字，然后把这个名字插入到段落中以更新显示。")]),r._v(" "),e("p",[r._v("如果你互换了代码里最初两行的顺序，会导致问题。浏览器"),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Learn/Common_questions/Tools_and_setup/What_are_browser_developer_tools",target:"_blank",rel:"noopener noreferrer"}},[r._v("开发者控制台"),e("OutboundLink")],1),r._v("将返回一个错误："),e("code",[r._v("TypeError: para is undefined")]),r._v("。这意味着 "),e("code",[r._v("para")]),r._v(" 对象还不存在，所以我们不能为它增添一个事件监听器。")]),r._v(" "),e("p",[e("strong",[r._v("备注：")]),r._v(" 这是一个很常见的错误，在引用对象之前必须确保该对象已经存在。")]),r._v(" "),e("h3",{attrs:{id:"解释代码-vs-编译代码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解释代码-vs-编译代码"}},[r._v("#")]),r._v(" "),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/First_steps/What_is_JavaScript#%E8%A7%A3%E9%87%8A%E4%BB%A3%E7%A0%81_vs_%E7%BC%96%E8%AF%91%E4%BB%A3%E7%A0%81",target:"_blank",rel:"noopener noreferrer"}},[r._v("解释代码 vs 编译代码"),e("OutboundLink")],1)]),r._v(" "),e("p",[r._v("作为程序员，你或许听说过这两个术语："),e("strong",[r._v("解释")]),r._v("（interpret）和"),e("strong",[r._v("编译")]),r._v("（compile）。在解释型语言中，代码自上而下运行，且实时返回运行结果。代码在由浏览器执行前，不需要将其转化为其他形式。代码将直接以文本格式被接收和处理。")]),r._v(" "),e("p",[r._v("相对的，编译型语言需要先将代码转化（编译）成另一种形式才能运行。比如 C/C++ 先被编译成机器码，然后才能由计算机运行。程序将以二进制的格式运行，这些二进制内容是由程序源代码产生的。")]),r._v(" "),e("p",[r._v("JavaScript 是轻量级解释型语言。浏览器接受到 JavaScript 代码，并以代码自身的文本格式运行它。技术上，几乎所有 JavaScript 转换器都运用了一种叫做"),e("strong",[r._v("即时编译")]),r._v("（just-in-time compiling）的技术；当 JavaScript 源代码被执行时，它会被编译成二进制的格式，使代码运行速度更快。尽管如此，JavaScript 仍然是一门解释型语言，因为编译过程发生在代码运行中，而非之前。")]),r._v(" "),e("p",[r._v("两种类型的语言各有优势，这个问题我们暂且不谈。")]),r._v(" "),e("h3",{attrs:{id:"服务器端代码-vs-客户端代码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#服务器端代码-vs-客户端代码"}},[r._v("#")]),r._v(" "),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/First_steps/What_is_JavaScript#%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E4%BB%A3%E7%A0%81_vs_%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%BB%A3%E7%A0%81",target:"_blank",rel:"noopener noreferrer"}},[r._v("服务器端代码 vs 客户端代码"),e("OutboundLink")],1)]),r._v(" "),e("p",[r._v("你或许还听说过"),e("strong",[r._v("服务器端")]),r._v("（server-side）和"),e("strong",[r._v("客户端")]),r._v("（client-side）代码这两个术语，尤其是在 web 开发时。客户端代码是在用户的电脑上运行的代码，在浏览一个网页时，它的客户端代码就会被下载，然后由浏览器来运行并展示。在本模块中我们讨论的主要是"),e("strong",[r._v("客户端 JavaScript")]),r._v("。")]),r._v(" "),e("p",[r._v("而服务器端代码在服务器上运行，然后运行结果才由浏览器下载并展示出来。流行的服务器端 web 语言包括：PHP、Python、Ruby、ASP.NET，甚至有 JavaScript！JavaScript 也可用作服务器端语言，比如现在流行的 Node.js 环境，你可以在我们的"),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Learn/Server-side",target:"_blank",rel:"noopener noreferrer"}},[r._v("动态网页——服务器端编程"),e("OutboundLink")],1),r._v("主题中找到更多关于服务器端 JavaScript 的知识。")]),r._v(" "),e("h3",{attrs:{id:"动态代码-vs-静态代码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#动态代码-vs-静态代码"}},[r._v("#")]),r._v(" "),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/First_steps/What_is_JavaScript#%E5%8A%A8%E6%80%81%E4%BB%A3%E7%A0%81_vs_%E9%9D%99%E6%80%81%E4%BB%A3%E7%A0%81",target:"_blank",rel:"noopener noreferrer"}},[r._v("动态代码 vs 静态代码"),e("OutboundLink")],1)]),r._v(" "),e("p",[e("strong",[r._v("动态")]),r._v("一词既适用于客户端 JavaScript，又适用于描述服务器端语言。它是指通过按需生成新内容来更新 web 页面或应用，使得不同环境下可以显示出不同内容。服务器端代码会在服务器上动态生成新内容，例如从数据库中提取信息。而客户端 JavaScript 则在用户端浏览器中动态生成新内容，例如创建一个新的 HTML 表格，用从服务器请求到的数据填充，然后在网页中向用户展示这个表格。两种情况的意义略有不同，但又有所关联，且两者（服务器端和客户端）经常协同工作。")]),r._v(" "),e("p",[r._v("没有动态更新内容的网页叫做"),e("strong",[r._v("静态")]),r._v("页面，所显示的内容不会改变。")]),r._v(" "),e("h2",{attrs:{id:"怎样向页面添加-javascript"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#怎样向页面添加-javascript"}},[r._v("#")]),r._v(" "),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/First_steps/What_is_JavaScript#%E6%80%8E%E6%A0%B7%E5%90%91%E9%A1%B5%E9%9D%A2%E6%B7%BB%E5%8A%A0_javascript%EF%BC%9F",target:"_blank",rel:"noopener noreferrer"}},[r._v("怎样向页面添加 JavaScript？"),e("OutboundLink")],1)]),r._v(" "),e("p",[r._v("可以像添加 CSS 那样将 JavaScript 添加到 HTML 页面中。CSS 使用 "),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/style",target:"_blank",rel:"noopener noreferrer"}},[e("code",[r._v("](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/link) 元素链接外部样式表，使用 [")]),e("OutboundLink")],1),r._v(" 元素向 HTML 嵌入内部样式表，而 JavaScript 这里只需一个元素——"),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/script",target:"_blank",rel:"noopener noreferrer"}},[r._v("``"),e("OutboundLink")],1),r._v("。我们来看看它是怎么工作的。")]),r._v(" "),e("h3",{attrs:{id:"内部-javascript"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#内部-javascript"}},[r._v("#")]),r._v(" "),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/First_steps/What_is_JavaScript#%E5%86%85%E9%83%A8_javascript",target:"_blank",rel:"noopener noreferrer"}},[r._v("内部 JavaScript"),e("OutboundLink")],1)]),r._v(" "),e("ol",[e("li",[e("p",[r._v("首先，下载示例文件 "),e("a",{attrs:{href:"https://github.com/mdn/learning-area/blob/main/javascript/introduction-to-js-1/what-is-js/apply-javascript.html",target:"_blank",rel:"noopener noreferrer"}},[r._v("apply-javascript.html"),e("OutboundLink")],1),r._v("。放在一个方便的文件夹里。")])]),r._v(" "),e("li",[e("p",[r._v("分别在浏览器和文本编辑器中打开这个文件。你会看到这个 HTML 文件创建了一个简单的网页，其中有一个可点击按钮。")])]),r._v(" "),e("li",[e("p",[r._v("然后转到文本编辑器，在")]),r._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[r._v("</head>\n")])])]),e("p",[r._v("标签结束前插入以下代码：")]),r._v(" "),e("p",[r._v("HTMLCopy to Clipboard")]),r._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[r._v("<script>\n  // 在此编写 JavaScript 代码\n<\/script>\n")])])])]),r._v(" "),e("li",[e("p",[r._v("下面，在")]),r._v(" "),e("p",[r._v("元素中添加一些 JavaScript 代码，这个页面就能做一些更有趣的事。在“// 在此编写 JavaScript 代码”一行下方添加以下代码：")]),r._v(" "),e("p",[r._v("JSCopy to Clipboard")]),r._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[r._v('document.addEventListener("DOMContentLoaded", () => {\n  function createParagraph() {\n    const para = document.createElement("p");\n    para.textContent = "你点击了按钮！";\n    document.body.appendChild(para);\n  }\n\n  const buttons = document.querySelectorAll("button");\n\n  for (const button of buttons) {\n    button.addEventListener("click", createParagraph);\n  }\n});\n')])])])]),r._v(" "),e("li",[e("p",[r._v("保存文件并刷新浏览器，然后你会发现，点击按钮文档下方将会添加一个新段落。")])])]),r._v(" "),e("p",[e("strong",[r._v("备注：")]),r._v(" 如果示例不能正常工作，请依次检查所有步骤，并保证没有纰漏。原始文件是否以 "),e("code",[r._v(".html")]),r._v(" 为扩展名保存到本地了？"),e("code",[r._v("</body>")]),r._v(" 标签前是否添加了 "),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/script",target:"_blank",rel:"noopener noreferrer"}},[r._v("``"),e("OutboundLink")],1),r._v(" 元素？JavaScript 代码输入是否正确？"),e("strong",[r._v("JavaScript 是区分大小写的，而且非常精确，所以你需要准确无误地输入所示的句法，否则可能会出错。")])]),r._v(" "),e("p",[e("strong",[r._v("备注：")]),r._v(" 你可以在 GitHub 上查看此版本 "),e("a",{attrs:{href:"https://github.com/mdn/learning-area/blob/main/javascript/introduction-to-js-1/what-is-js/apply-javascript-internal.html",target:"_blank",rel:"noopener noreferrer"}},[r._v("apply-javascript-internal.html"),e("OutboundLink")],1),r._v("（"),e("a",{attrs:{href:"https://mdn.github.io/learning-area/javascript/introduction-to-js-1/what-is-js/apply-javascript-internal.html",target:"_blank",rel:"noopener noreferrer"}},[r._v("也可在线查看"),e("OutboundLink")],1),r._v("）。")]),r._v(" "),e("h3",{attrs:{id:"外部-javascript"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#外部-javascript"}},[r._v("#")]),r._v(" "),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/First_steps/What_is_JavaScript#%E5%A4%96%E9%83%A8_javascript",target:"_blank",rel:"noopener noreferrer"}},[r._v("外部 JavaScript"),e("OutboundLink")],1)]),r._v(" "),e("p",[r._v("这很不错，但是能不能把 JavaScript 代码放置在一个外部文件中呢？现在我们来研究一下。")]),r._v(" "),e("ol",[e("li",[e("p",[r._v("首先，在刚才的 HTML 文件所在的目录下创建一个名为 "),e("code",[r._v("script.js")]),r._v(" 的新文件。请确保扩展名为 "),e("code",[r._v(".js")]),r._v("，只有这样才能被识别为 JavaScript 代码。")])]),r._v(" "),e("li",[e("p",[r._v("将")]),r._v(" "),e("p",[r._v("元素替换为：")]),r._v(" "),e("p",[r._v("HTMLCopy to Clipboard")]),r._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[r._v('<script src="script.js" defer><\/script>\n')])])])]),r._v(" "),e("li",[e("p",[r._v("在")]),r._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[r._v("script.js\n")])])]),e("p",[r._v("文件中，添加下面的脚本：")]),r._v(" "),e("p",[r._v("JSCopy to Clipboard")]),r._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[r._v('function createParagraph() {\n  const para = document.createElement("p");\n  para.textContent = "你点击了按钮！";\n  document.body.appendChild(para);\n}\n\nconst buttons = document.querySelectorAll("button");\n\nfor (const button of buttons) {\n  button.addEventListener("click", createParagraph);\n}\n')])])])]),r._v(" "),e("li",[e("p",[r._v("保存并刷新浏览器，你会发现二者完全一样！区别在于，现在我们把 JavaScript 写进了一个外部文件。这样做一般会使代码更加有序，更易于复用，且没有了脚本的混合，HTML 也会更加易读，因此这是个好的习惯。")])])]),r._v(" "),e("p",[e("strong",[r._v("备注：")]),r._v(" 你可以在 GitHub 上查看 "),e("a",{attrs:{href:"https://github.com/mdn/learning-area/blob/main/javascript/introduction-to-js-1/what-is-js/apply-javascript-external.html",target:"_blank",rel:"noopener noreferrer"}},[r._v("apply-javascript-external.html"),e("OutboundLink")],1),r._v(" 以及 "),e("a",{attrs:{href:"https://github.com/mdn/learning-area/blob/main/javascript/introduction-to-js-1/what-is-js/script.js",target:"_blank",rel:"noopener noreferrer"}},[r._v("script.js"),e("OutboundLink")],1),r._v("（"),e("a",{attrs:{href:"https://mdn.github.io/learning-area/javascript/introduction-to-js-1/what-is-js/apply-javascript-external.html",target:"_blank",rel:"noopener noreferrer"}},[r._v("也可在线查看"),e("OutboundLink")],1),r._v("）。")]),r._v(" "),e("h3",{attrs:{id:"内联-javascript-处理器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#内联-javascript-处理器"}},[r._v("#")]),r._v(" "),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/First_steps/What_is_JavaScript#%E5%86%85%E8%81%94_javascript_%E5%A4%84%E7%90%86%E5%99%A8",target:"_blank",rel:"noopener noreferrer"}},[r._v("内联 JavaScript 处理器"),e("OutboundLink")],1)]),r._v(" "),e("p",[r._v("注意，有时候你会遇到在 HTML 中存在着一丝真实的 JavaScript 代码。它或许看上去像这样：")]),r._v(" "),e("p",[r._v("JSPlayCopy to Clipboard")]),r._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[r._v('function createParagraph() {\n  const para = document.createElement("p");\n  para.textContent = "你点击了按钮！";\n  document.body.appendChild(para);\n}\n')])])]),e("p",[r._v("HTMLPlayCopy to Clipboard")]),r._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[r._v('<button onclick="createParagraph()">点我！</button>\n')])])]),e("p",[r._v("你可以在下面尝试这个版本的演示。")]),r._v(" "),e("p",[r._v("Play")]),r._v(" "),e("iframe",{staticClass:"sample-code-frame",staticStyle:{"box-sizing":"content-box","border-top":"none","border-right-color":"","border-right-style":"","border-right-width":"","border-bottom-color":"","border-bottom-style":"","border-bottom-width":"","border-left-color":"","border-left-style":"","border-left-width":"","border-image-source":"","border-image-slice":"","border-image-width":"","border-image-outset":"","border-image-repeat":"","max-width":"100%",width:"calc((100% - 2rem) - 2px)",background:"rgb(255, 255, 255)","border-top-left-radius":"0px","border-top-right-radius":"0px","border-bottom-right-radius":"","border-bottom-left-radius":"",padding:"1rem","margin-top":"0px"},attrs:{title:"内联 JavaScript 处理器 sample",id:"frame_内联_javascript_处理器",width:"100%",height:"150",src:"https://live.mdnplay.dev/zh-CN/docs/Learn/JavaScript/First_steps/What_is_JavaScript/runner.html?id=%E5%86%85%E8%81%94_javascript_%E5%A4%84%E7%90%86%E5%99%A8",loading:"lazy"}}),r._v(" "),e("p",[r._v("这个演示与之前的两个功能完全一致，只是在 "),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/button",target:"_blank",rel:"noopener noreferrer"}},[r._v("``"),e("OutboundLink")],1),r._v(" 元素中包含了一个内联的 "),e("code",[r._v("onclick")]),r._v(" 处理器，使得函数在按钮被按下时运行。")]),r._v(" "),e("p",[e("strong",[r._v("然而请不要这样做")]),r._v("。这将使 JavaScript 污染了 HTML，而且效率低下。对于每个需要应用 JavaScript 的按钮，你都得手动添加 "),e("code",[r._v('onclick="createParagraph()"')]),r._v(" 属性。")]),r._v(" "),e("h3",{attrs:{id:"请使用-addeventlistener"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#请使用-addeventlistener"}},[r._v("#")]),r._v(" "),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/First_steps/What_is_JavaScript#%E8%AF%B7%E4%BD%BF%E7%94%A8_addeventlistener",target:"_blank",rel:"noopener noreferrer"}},[r._v("请使用 addEventListener"),e("OutboundLink")],1)]),r._v(" "),e("p",[r._v("与其在 HTML 中包含 JavaScript，不如使用纯 JavaScript 构造。通过 "),e("code",[r._v("querySelectorAll()")]),r._v(" 函数，可以选择页面上的所有按钮。然后可以循环遍历这些按钮，使用 "),e("code",[r._v("addEventListener()")]),r._v(" 为每个按钮分配一个处理器。代码如下所示：")]),r._v(" "),e("p",[r._v("JSCopy to Clipboard")]),r._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[r._v("const buttons = document.querySelectorAll('button');\n\nfor(let i = 0; i < buttons.length ; i++) {\n  buttons[i].addEventListener('click', createParagraph);\n}\n")])])]),e("p",[r._v("这样写乍看去比 "),e("code",[r._v("onclick")]),r._v(" 属性要长一些，但是这样写会对页面上所有按钮生效，无论多少个，或添加或删除，完全无需修改 JavaScript 代码。")]),r._v(" "),e("p",[e("strong",[r._v("备注：")]),r._v(" 请尝试修改 "),e("code",[r._v("apply-javascript.html")]),r._v(" 以添加更多按钮。刷新后可发现按下任一按钮时都会创建一个段落。这样很高效吧？")]),r._v(" "),e("h3",{attrs:{id:"脚本调用策略"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#脚本调用策略"}},[r._v("#")]),r._v(" "),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/First_steps/What_is_JavaScript#%E8%84%9A%E6%9C%AC%E8%B0%83%E7%94%A8%E7%AD%96%E7%95%A5",target:"_blank",rel:"noopener noreferrer"}},[r._v("脚本调用策略"),e("OutboundLink")],1)]),r._v(" "),e("p",[r._v("要让脚本调用的时机符合预期，需要解决一系列的问题。这里看似简单，实际大有文章。最常见的问题就是：HTML 元素是按其在页面中出现的次序调用的，如果用 JavaScript 来管理页面上的元素（更精确的说法是使用"),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/Client-side_web_APIs/Manipulating_documents#%E6%96%87%E6%A1%A3%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%9E%8B",target:"_blank",rel:"noopener noreferrer"}},[r._v("文档对象模型"),e("OutboundLink")],1),r._v("），若 JavaScript 加载于欲操作的 HTML 元素之前，则代码将出错。")]),r._v(" "),e("p",[r._v("在上文的“内部”、“外部”示例中，JavaScript 在文档头部，解析 HTML 文档体之前加载并执行。这样做是有隐患的，需要使用一些结构来避免错误发生。")]),r._v(" "),e("p",[r._v("“内部”示例使用了以下结构：")]),r._v(" "),e("p",[r._v("JSCopy to Clipboard")]),r._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[r._v('document.addEventListener("DOMContentLoaded", () => {\n  // …\n});\n')])])]),e("p",[r._v("这是一个事件监听器，它监听浏览器的 "),e("code",[r._v("DOMContentLoaded")]),r._v(" 事件，其标志了 HTML 文档体完全加载和解析。该代码块中的 JavaScript 在事件被触发后才会运行，因此避免了错误（你将在课程的后面"),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/Building_blocks/Events",target:"_blank",rel:"noopener noreferrer"}},[r._v("学习事件"),e("OutboundLink")],1),r._v("中了解到这些）。")]),r._v(" "),e("p",[r._v("“外部”示例中使用了 JavaScript 的一项现代技术（"),e("code",[r._v("defer")]),r._v(" 属性）来解决这一问题，它告知浏览器在遇到 "),e("code",[r._v("<script>")]),r._v(" 元素时继续下载 HTML 内容。")]),r._v(" "),e("p",[r._v("HTMLCopy to Clipboard")]),r._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[r._v('<script src="script.js" defer><\/script>\n')])])]),e("p",[r._v("上述情况下，脚本和 HTML 将一并加载，代码将顺利运行。")]),r._v(" "),e("p",[e("strong",[r._v("备注：")]),r._v(" 在外部示例中，我们不需要使用 "),e("code",[r._v("DOMContentLoaded")]),r._v(" 事件，因为 "),e("code",[r._v("defer")]),r._v(" 属性为我们解决了这个问题。我们没有在内部 JavaScript 示例中使用 "),e("code",[r._v("defer")]),r._v(" 解决方案，因为 "),e("code",[r._v("defer")]),r._v(" 只适用于外部脚本。")]),r._v(" "),e("p",[r._v("解决此问题的旧方法是：把脚本元素放在文档体的底端（也就是 "),e("code",[r._v("</body>")]),r._v(" 标签之前，与之相邻），这样脚本就可以在 HTML 解析完毕后加载了。此方案的问题是：只有在所有 HTML DOM 加载完成后才开始脚本的加载/解析过程。对于有大量 JavaScript 代码的大型网站，可能会带来显著的性能损耗。")]),r._v(" "),e("h4",{attrs:{id:"async-和-defer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#async-和-defer"}},[r._v("#")]),r._v(" async 和 defer")]),r._v(" "),e("p",[r._v("上述的脚本阻塞问题实际有两种解决方案——"),e("code",[r._v("async")]),r._v(" 和 "),e("code",[r._v("defer")]),r._v("。我们来依次讲解。")]),r._v(" "),e("p",[r._v("浏览器遇到 "),e("code",[r._v("async")]),r._v(" 脚本时不会阻塞页面渲染，而是直接下载然后运行。但是，一旦下载完成，脚本就会执行，从而阻止页面渲染。脚本的运行次序无法控制。当页面的脚本之间彼此独立，且不依赖于本页面的其他任何脚本时，"),e("code",[r._v("async")]),r._v(" 是最理想的选择。")]),r._v(" "),e("p",[r._v("使用 "),e("code",[r._v("defer")]),r._v(" 属性加载的脚本将按照它们在页面上出现的顺序加载。在页面内容全部加载完毕之前，脚本不会运行，如果脚本依赖于 DOM 的存在（例如，脚本修改了页面上的一个或多个元素），这一点非常有用。")]),r._v(" "),e("p",[r._v("以下是不同脚本加载方法的可视化表示，以及这对页面意味着什么：")]),r._v(" "),e("p",[e("img",{attrs:{src:"E:%5CWeb%E5%89%8D%E7%AB%AF%5CProject%5Cblog%5Csource%5Cmedias%5Casync-defer.jpg",alt:"三种脚本加载方法的工作原理：默认情况下，在获取和执行 JavaScript 时，解析过程被阻塞。使用 async 时，解析暂停，仅执行。使用 defer 时，解析不会暂停，但在解析完所有其他内容后才开始执行"}})]),r._v(" "),e("p",[e("em",[r._v("该图片来自 "),e("a",{attrs:{href:"https://html.spec.whatwg.org/images/asyncdefer.svg",target:"_blank",rel:"noopener noreferrer"}},[r._v("HTML spec"),e("OutboundLink")],1),r._v("，经过了复制和裁剪，以 "),e("a",{attrs:{href:"https://creativecommons.org/licenses/by/4.0/",target:"_blank",rel:"noopener noreferrer"}},[r._v("CC BY 4.0"),e("OutboundLink")],1),r._v(" 获得授权。")])]),r._v(" "),e("p",[r._v("比如，如果你的页面要加载以下三个脚本：")]),r._v(" "),e("p",[r._v("HTMLCopy to Clipboard")]),r._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[r._v('<script async src="js/vendor/jquery.js"><\/script>\n\n<script async src="js/script2.js"><\/script>\n\n<script async src="js/script3.js"><\/script>\n')])])]),e("p",[r._v("三者的调用顺序是不确定的。"),e("code",[r._v("jquery.js")]),r._v(" 可能在 "),e("code",[r._v("script2")]),r._v(" 和 "),e("code",[r._v("script3")]),r._v(" 之前或之后调用，如果这样，后两个脚本中依赖 "),e("code",[r._v("jquery")]),r._v(" 的函数将产生错误，因为脚本运行时 "),e("code",[r._v("jquery")]),r._v(" 尚未加载。")]),r._v(" "),e("p",[e("code",[r._v("async")]),r._v(" 应该在有大量后台脚本需要加载，并且只想尽快加载到位的情况下使用。例如，你可能需要加载一些游戏数据文件，这在游戏真正开始时是需要的，但现在你只想显示游戏介绍、标题和大厅，而不想被脚本加载阻塞。")]),r._v(" "),e("p",[r._v("解决这一问题可使用 "),e("code",[r._v("defer")]),r._v(" 属性，脚本将按照在页面中出现的顺序加载和运行：")]),r._v(" "),e("p",[r._v("HTMLCopy to Clipboard")]),r._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[r._v('<script defer src="js/vendor/jquery.js"><\/script>\n\n<script defer src="js/script2.js"><\/script>\n\n<script defer src="js/script3.js"><\/script>\n')])])]),e("p",[r._v("添加 "),e("code",[r._v("defer")]),r._v(" 属性的脚本将按照在页面中出现的顺序加载，因此第二个示例可确保 "),e("code",[r._v("jquery.js")]),r._v(" 必定加载于 "),e("code",[r._v("script2.js")]),r._v(" 和 "),e("code",[r._v("script3.js")]),r._v(" 之前，同时 "),e("code",[r._v("script2.js")]),r._v(" 必定加载于 "),e("code",[r._v("script3.js")]),r._v(" 之前。在页面内容全部加载完成之前，它们不会运行，如果你的脚本依赖于 DOM 的存在（例如，它们修改了页面上的一个或多个元素），这将非常有用。")]),r._v(" "),e("p",[r._v("脚本调用策略小结：")]),r._v(" "),e("ul",[e("li",[e("code",[r._v("async")]),r._v(" 和 "),e("code",[r._v("defer")]),r._v(" 都指示浏览器在一个单独的线程中下载脚本，而页面的其他部分（DOM 等）正在下载，因此在获取过程中页面加载不会被阻塞。")]),r._v(" "),e("li",[e("code",[r._v("async")]),r._v(" 属性的脚本将在下载完成后立即执行。这将阻塞页面，并不保证任何特定的执行顺序。")]),r._v(" "),e("li",[r._v("带有 "),e("code",[r._v("defer")]),r._v(" 属性的脚本将按照它们的顺序加载，并且只有在所有脚本加载完毕后才会执行。")]),r._v(" "),e("li",[r._v("如果脚本无需等待页面解析，且无依赖独立运行，那么应使用 "),e("code",[r._v("async")]),r._v("。")]),r._v(" "),e("li",[r._v("如果脚本需要等待页面解析，且依赖于其他脚本，调用这些脚本时应使用 "),e("code",[r._v("defer")]),r._v("，将关联的脚本按所需顺序置于 HTML 的相应 "),e("code",[r._v("<script>")]),r._v(" 元素中。")])]),r._v(" "),e("h2",{attrs:{id:"注释"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#注释"}},[r._v("#")]),r._v(" "),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/First_steps/What_is_JavaScript#%E6%B3%A8%E9%87%8A",target:"_blank",rel:"noopener noreferrer"}},[r._v("注释"),e("OutboundLink")],1)]),r._v(" "),e("p",[r._v("就像 HTML 和 CSS，JavaScript 代码中也可以添加注释，浏览器会忽略它们，注释只是为你的同事（还有你，如果半年后再看自己写的代码，还会记得其中的含义吗）提供关于代码如何工作的指引。注释非常有用，而且应该经常使用，尤其在大型应用中。注释分为两类：")]),r._v(" "),e("ul",[e("li",[e("p",[r._v("在双斜杠（//）后添加单行注释，比如：")]),r._v(" "),e("p",[r._v("JSCopy to Clipboard")]),r._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[r._v("// 我是一条注释\n")])])])]),r._v(" "),e("li",[e("p",[r._v("在")]),r._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[r._v("/*\n")])])]),e("p",[r._v("和")]),r._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[r._v("*/\n")])])]),e("p",[r._v("之间添加多行注释，比如：")]),r._v(" "),e("p",[r._v("JSCopy to Clipboard")]),r._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[r._v("/*\n  我也是\n  一条注释\n*/\n")])])])])]),r._v(" "),e("p",[r._v("比如说，我们可以这样为上一个演示添加注释：")]),r._v(" "),e("p",[r._v("JSCopy to Clipboard")]),r._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[r._v('// 函数：创建一个新的段落并添加至 HTML body 底部。\nfunction createParagraph() {\n  const para = document.createElement("p");\n  para.textContent = "你点了这个按钮！";\n  document.body.appendChild(para);\n}\n\n/*\n  1. 取得页面上所有按钮的引用并将它们置于一个数组中。\n  2. 通过一个循环为每个按钮添加一个点击事件的监听器。\n  当按钮被点击时，调用 createParagraph() 函数。\n*/\n\nconst buttons = document.querySelectorAll("button");\n\nfor (const button of buttons) {\n  button.addEventListener("click", createParagraph);\n}\n')])])]),e("p",[e("strong",[r._v("备注：")]),r._v(" 一般来说，注释越多越好，但如果你发现自己添加了大量注释来解释变量是什么（变量名也许应该更直观），或者解释非常简单的操作（也许代码过于复杂），那么就应该小心了。")]),r._v(" "),e("h2",{attrs:{id:"总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[r._v("#")]),r._v(" "),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/First_steps/What_is_JavaScript#%E6%80%BB%E7%BB%93",target:"_blank",rel:"noopener noreferrer"}},[r._v("总结"),e("OutboundLink")],1)]),r._v(" "),e("p",[r._v("恭喜你，迈出了探索 JavaScript 世界的第一步。我们从理论开始，介绍为什么要使用 JavaScript，以及用它能做什么事情。过程中穿插了一些代码示例并讲解了 JavaScript 如何与网站中其他代码适配，等等。")])])}),[],!1,null,null,null);e.default=o.exports}}]);